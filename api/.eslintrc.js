module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir: __dirname,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin', 'prettier'],
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
    'plugin:import/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
    // 'plugin:sonarjs/recommended-legacy',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'no-console': 'warn',
    semi: ['error', 'always'],
    'import/no-unresolved': 'off',
    'import/named': 2,
    'import/namespace': 2,
    'import/default': 2,
    'import/export': 2,
    'import/newline-after-import': ['warn', { count: 1 }],
    'no-useless-catch': ['error'],
    '@typescript-eslint/no-empty-object-type': ['warn'],
    'max-params': ['error', 3],
    'no-constant-condition': 'error',
    'no-debugger': 'error',
    'prefer-const': 'error',
    'max-lines-per-function': ['off'],
    'max-lines': ['error', 800],
    // 'sonarjs/cognitive-complexity': ['error', 30],
    // 'sonarjs/no-identical-expressions': 'error',
    // 'sonarjs/prefer-nullish-coalescing': ['off'],
  },
};
