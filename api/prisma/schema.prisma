// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "nativeDistinct", "fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(cuid())
  email     String        @unique
  name      String
  password  String
  role      Role_T        @default(MEMBER)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  groups    GroupMember[]
  messages  Message[]
  Group     Group[]
}

model Group {
  id          String        @id @default(cuid())
  name        String
  avatar      String?
  createdById String
  createdBy   User          @relation(fields: [createdById], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  members     GroupMember[]
  messages    Message[]
}

model Message {
  id          Int          @id @default(autoincrement())
  groupId     String
  group       Group        @relation(fields: [groupId], references: [id])
  senderId    String
  sender      User         @relation(fields: [senderId], references: [id])
  content     String?
  sentAt      DateTime     @default(now())
  type        MessageType  @default(text)
  attachments Attachment[]
}

model GroupMember {
  group    Group    @relation(fields: [groupId], references: [id])
  groupId  String
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  joinedAt DateTime @default(now())
  role     Role_T   @default(MEMBER)

  @@id([groupId, userId])
}

enum MessageType {
  text
  image
  file
}

model Attachment {
  id        Int     @id @default(autoincrement())
  message   Message @relation(fields: [messageId], references: [id])
  messageId Int
  filename  String
  filepath  String
  filesize  Int
}

enum Role_T {
  ADMIN
  MEMBER
}
